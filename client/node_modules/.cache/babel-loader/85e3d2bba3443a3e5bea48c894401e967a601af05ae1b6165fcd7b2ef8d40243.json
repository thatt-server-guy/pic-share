{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nexport const login = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/login`, {\n      email,\n      password\n    });\n    localStorage.setItem('token', response.data.token);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw new Error((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed');\n  }\n};\nexport const signup = async (username, email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/signup`, {\n      username,\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    throw new Error((error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Signup failed');\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","login","email","password","response","post","localStorage","setItem","data","token","error","_error$response","_error$response$data","Error","message","signup","username","_error$response2","_error$response2$data","logout","removeItem"],"sources":["/home/usama/PicShare/client/src/services/auth.ts"],"sourcesContent":["import axios from 'axios';\nimport { AuthResponse } from '../types';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nexport const login = async (email: string, password: string): Promise<AuthResponse> => {\n    try {\n        const response = await axios.post(`${API_URL}/auth/login`, { email, password });\n        localStorage.setItem('token', response.data.token);\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error?.response?.data?.message || 'Login failed');\n    }\n};\n\nexport const signup = async (username: string, email: string, password: string): Promise<AuthResponse> => {\n    try {\n        const response = await axios.post(`${API_URL}/auth/signup`, { username, email, password });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error?.response?.data?.message || 'Signup failed');\n    }\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAA4B;EACnF,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,aAAa,EAAE;MAAEK,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC/EG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC;IAClD,OAAOL,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOE,KAAU,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACjB,MAAM,IAAIC,KAAK,CAAC,CAAAH,KAAK,aAALA,KAAK,wBAAAC,eAAA,GAALD,KAAK,CAAEN,QAAQ,cAAAO,eAAA,wBAAAC,oBAAA,GAAfD,eAAA,CAAiBH,IAAI,cAAAI,oBAAA,uBAArBA,oBAAA,CAAuBE,OAAO,KAAI,cAAc,CAAC;EACrE;AACJ,CAAC;AAED,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAOC,QAAgB,EAAEd,KAAa,EAAEC,QAAgB,KAA4B;EACtG,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,OAAO,cAAc,EAAE;MAAEmB,QAAQ;MAAEd,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC1F,OAAOC,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOE,KAAU,EAAE;IAAA,IAAAO,gBAAA,EAAAC,qBAAA;IACjB,MAAM,IAAIL,KAAK,CAAC,CAAAH,KAAK,aAALA,KAAK,wBAAAO,gBAAA,GAALP,KAAK,CAAEN,QAAQ,cAAAa,gBAAA,wBAAAC,qBAAA,GAAfD,gBAAA,CAAiBT,IAAI,cAAAU,qBAAA,uBAArBA,qBAAA,CAAuBJ,OAAO,KAAI,eAAe,CAAC;EACtE;AACJ,CAAC;AAED,OAAO,MAAMK,MAAM,GAAGA,CAAA,KAAM;EACxBb,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;AACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}