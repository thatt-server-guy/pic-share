{"ast":null,"code":"var _jsxFileName = \"/home/usama/PicShare/client/src/pages/ImageDetails.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchImageDetails } from '../services/api';\nimport Loading from '../components/common/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [image, setImage] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const loadImage = async () => {\n      try {\n        if (id) {\n          const data = await fetchImageDetails(id);\n          setImage(data);\n        }\n      } catch (error) {\n        console.error('Error fetching image:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadImage();\n  }, [id]);\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 25\n  }, this);\n  if (!image) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Image not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: image.url,\n      alt: image.caption,\n      className: \"w-full h-auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl\",\n      children: image.caption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Uploaded by: \", image.uploaderId.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Likes: \", image.likes.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), image.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"By: \", comment.userId.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageDetails, \"b9osYEITZfvBC5NQ/5pOSqlnqfo=\", false, function () {\n  return [useParams];\n});\n_c = ImageDetails;\nexport default ImageDetails;\nvar _c;\n$RefreshReg$(_c, \"ImageDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","fetchImageDetails","Loading","jsxDEV","_jsxDEV","ImageDetails","_s","id","image","setImage","loading","setLoading","loadImage","data","error","console","fileName","_jsxFileName","lineNumber","columnNumber","children","className","src","url","alt","caption","uploaderId","username","likes","length","comments","map","comment","text","userId","_id","_c","$RefreshReg$"],"sources":["/home/usama/PicShare/client/src/pages/ImageDetails.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchImageDetails } from '../services/api';\nimport { IImage } from '../types';\nimport Loading from '../components/common/Loading';\n\nconst ImageDetails = () => {\n    const { id } = useParams();\n    const [image, setImage] = useState<IImage | null>(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const loadImage = async () => {\n            try {\n                if (id) {\n                    const data = await fetchImageDetails(id);\n                    setImage(data);\n                }\n            } catch (error) {\n                console.error('Error fetching image:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadImage();\n    }, [id]);\n\n    if (loading) return <Loading />;\n    if (!image) return <div>Image not found</div>;\n\n    return (\n        <div className=\"image-details\">\n            <img src={image.url} alt={image.caption} className=\"w-full h-auto\" />\n            <h2 className=\"text-2xl\">{image.caption}</h2>\n            <p>Uploaded by: {image.uploaderId.username}</p>\n            <p>Likes: {image.likes.length}</p>\n            <div className=\"comments\">\n                <h3>Comments:</h3>\n                {image.comments.map((comment) => (\n                    <div key={comment._id} className=\"comment\">\n                        <p>{comment.text}</p>\n                        <p>By: {comment.userId.username}</p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default ImageDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}