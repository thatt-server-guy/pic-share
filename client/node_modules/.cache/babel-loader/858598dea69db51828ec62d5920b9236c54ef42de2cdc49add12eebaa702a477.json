{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Add auth token to requests\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const fetchImages = async () => {\n  const response = await axios.get(`${API_URL}/images`);\n  return response.data;\n};\nexport const fetchImageDetails = async id => {\n  const response = await axios.get(`${API_URL}/images/${id}`);\n  return response.data;\n};\nexport const uploadImage = async formData => {\n  try {\n    const response = await axios.post(`${API_URL}/images/upload`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to upload image');\n  }\n};\nexport const likeImage = async id => {\n  const response = await axios.post(`${API_URL}/images/${id}/like`);\n  return response.data;\n};\nexport const commentOnImage = async (id, text) => {\n  const response = await axios.post(`${API_URL}/images/${id}/comments`, {\n    text\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","fetchImages","response","get","data","fetchImageDetails","id","uploadImage","formData","post","error","_error$response","_error$response$data","Error","message","likeImage","commentOnImage","text"],"sources":["/home/usama/PicShare/client/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { IImage } from '../types';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Add auth token to requests\naxios.interceptors.request.use((config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n});\n\nexport const fetchImages = async (): Promise<IImage[]> => {\n  const response = await axios.get(`${API_URL}/images`);\n  return response.data;\n};\n\nexport const fetchImageDetails = async (id: string): Promise<IImage> => {\n  const response = await axios.get(`${API_URL}/images/${id}`);\n  return response.data;\n};\n\nexport const uploadImage = async (formData: FormData): Promise<IImage> => {\n    try {\n        const response = await axios.post(`${API_URL}/images/upload`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        });\n        return response.data;\n    } catch (error: any) {\n        throw new Error(error.response?.data?.message || 'Failed to upload image');\n    }\n};\n\nexport const likeImage = async (id: string): Promise<IImage> => {\n  const response = await axios.post(`${API_URL}/images/${id}/like`);\n  return response.data;\n};\n\nexport const commentOnImage = async (id: string, text: string): Promise<IImage> => {\n  const response = await axios.post(`${API_URL}/images/${id}/comments`, { text });\n  return response.data;\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAE5E;AACAJ,KAAK,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,CAAC;AAEF,OAAO,MAAMM,WAAW,GAAG,MAAAA,CAAA,KAA+B;EACxD,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,SAAS,CAAC;EACrD,OAAOc,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,EAAU,IAAsB;EACtE,MAAMJ,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,WAAWkB,EAAE,EAAE,CAAC;EAC3D,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG,MAAOC,QAAkB,IAAsB;EACtE,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMf,KAAK,CAACsB,IAAI,CAAC,GAAGrB,OAAO,gBAAgB,EAAEoB,QAAQ,EAAE;MACpET,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOM,KAAU,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACjB,MAAM,IAAIC,KAAK,CAAC,EAAAF,eAAA,GAAAD,KAAK,CAACR,QAAQ,cAAAS,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBP,IAAI,cAAAQ,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI,wBAAwB,CAAC;EAC9E;AACJ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAOT,EAAU,IAAsB;EAC9D,MAAMJ,QAAQ,GAAG,MAAMf,KAAK,CAACsB,IAAI,CAAC,GAAGrB,OAAO,WAAWkB,EAAE,OAAO,CAAC;EACjE,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMY,cAAc,GAAG,MAAAA,CAAOV,EAAU,EAAEW,IAAY,KAAsB;EACjF,MAAMf,QAAQ,GAAG,MAAMf,KAAK,CAACsB,IAAI,CAAC,GAAGrB,OAAO,WAAWkB,EAAE,WAAW,EAAE;IAAEW;EAAK,CAAC,CAAC;EAC/E,OAAOf,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}